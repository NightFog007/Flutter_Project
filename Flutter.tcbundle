{
  "supported_languages" : [
    "any"
  ],
  "is_enabled" : true,
  "name" : "Flutter",
  "description" : "",
  "expanders" : [
    {
      "supported_languages" : [
        "any"
      ],
      "is_enabled" : true,
      "identifier" : "",
      "pattern" : "li ${arr:word}",
      "output_template" : "var ${arr} = [\"Tom\", \"Andy\", \"Jack\"];\n\/\/var ${arr} = List.of([1,2,3]);\n${arr}.add(\"test\");\n${arr}.forEach((v) => print(v));",
      "description" : "",
      "name" : "list"
    },
    {
      "output_template" : "\/\/ var map1 = {\"name\": \"Tom\", 'sex': 'male'}; \nvar ${foo} = new Map();\n${foo}['name'] = 'Tom';\n${foo}['sex'] = 'male';\n${foo}.forEach((k,v) => print('${k } :  ${v }'));",
      "name" : "map",
      "is_enabled" : true,
      "description" : "",
      "identifier" : "",
      "supported_languages" : [
        "any"
      ],
      "pattern" : "ma ${foo:word}"
    },
    {
      "supported_languages" : [
        "any"
      ],
      "name" : "textRich - 富文本",
      "pattern" : "textrich",
      "is_enabled" : true,
      "identifier" : "",
      "output_template" : "\nTextStyle blackStyle = TextStyle(fontWeight: FontWeight.normal, fontSize: 20, color: Colors.black);\n\nTextStyle redStyle = TextStyle(fontWeight: FontWeight.bold, fontSize: 20, color: Colors.red);\n\nText.rich(\n    TextSpan(\n        children: <TextSpan>[\n          TextSpan(text:'文本是视图系统中常见的控件，它用来显示一段特定样式的字符串，类似', style: redStyle), \n          TextSpan(text:'Android', style: blackStyle),\n          TextSpan(text:'中的', style:redStyle), \n          TextSpan(text:'TextView', style: blackStyle)\n        ]),\n  textAlign: TextAlign.center,\n),",
      "description" : ""
    },
    {
      "pattern" : "float ${foo:word}",
      "identifier" : "",
      "description" : "",
      "name" : "FloatingActionButton - 圆形按钮",
      "output_template" : "FloatingActionButton(\n          child: Text(\"${foo}\"),\n          onPressed: () {\n            print(\"FloatingActionButton Click\");\n          },\n        ),",
      "is_enabled" : true,
      "supported_languages" : [
        "any"
      ]
    },
    {
      "name" : "RaisedButton - 凸起按钮",
      "supported_languages" : [
        "any"
      ],
      "pattern" : "raise ${foo:word}",
      "identifier" : "",
      "output_template" : "RaisedButton(\n          child: Text(\"${foo}\"),\n          onPressed: () {\n            print(\"RaisedButton Click\");\n          },\n        ),",
      "description" : "",
      "is_enabled" : true
    },
    {
      "description" : "",
      "pattern" : "flat ${foo:word}",
      "identifier" : "",
      "supported_languages" : [
        "any"
      ],
      "is_enabled" : true,
      "output_template" : "FlatButton(\n          child: Text(\"${foo}\"),\n          onPressed: () {\n            print(\"FlatButton Click\");\n          },\n        ),",
      "name" : "FlatButton - 扁平按钮"
    },
    {
      "pattern" : "listview",
      "supported_languages" : [
        "any"
      ],
      "output_template" : "ListView(\n  children: <Widget>[\n    \/\/设置ListTile组件的标题与图标 \n    ListTile(leading: Icon(Icons.map),  title: Text('Map')),\n    ListTile(leading: Icon(Icons.mail), title: Text('Mail')),\n    ListTile(leading: Icon(Icons.message), title: Text('Message')),\n  ]),",
      "description" : "",
      "is_enabled" : true,
      "identifier" : "",
      "name" : "ListView"
    },
    {
      "identifier" : "",
      "description" : "",
      "supported_languages" : [
        "any"
      ],
      "name" : "Container",
      "pattern" : "container",
      "output_template" : "Container(\n  child: Text('Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。'),\n  padding: EdgeInsets.all(18.0), \/\/ 内边距\n  margin: EdgeInsets.all(44.0), \/\/ 外边距\n  width: 180.0,\n  height:240,\n  alignment: Alignment.center, \/\/ 子Widget居中对齐\n  decoration: BoxDecoration( \/\/Container样式\n    color: Colors.red, \/\/ 背景色\n    borderRadius: BorderRadius.circular(10.0), \/\/ 圆角边框\n  ),\n),",
      "is_enabled" : true
    },
    {
      "output_template" : "Padding(\n  padding: EdgeInsets.all(44.0),\n  child: Text('Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。'),\n),",
      "supported_languages" : [
        "any"
      ],
      "identifier" : "",
      "name" : "Padding",
      "pattern" : "padding",
      "description" : "",
      "is_enabled" : true
    },
    {
      "name" : "基础text",
      "pattern" : "text ${foo:word}",
      "output_template" : "Text(\n      \"${foo}\",\n      textAlign: TextAlign.center,\n      style: TextStyle(\n        fontSize: 20,\n        color: Colors.purple\n      ),\n),",
      "supported_languages" : [
        "any"
      ],
      "is_enabled" : true,
      "description" : "",
      "identifier" : ""
    },
    {
      "is_enabled" : true,
      "pattern" : "outline ${foo:word}",
      "output_template" : " OutlineButton(\n          child: Text(\"\u0018${foo}\"),\n          onPressed: () {\n            print(\"OutlineButton Click\");\n          },\n        ),",
      "description" : "",
      "supported_languages" : [
        "any"
      ],
      "identifier" : "",
      "name" : "OutlineButton"
    },
    {
      "is_enabled" : true,
      "supported_languages" : [
        "any"
      ],
      "pattern" : "netimage ${foo:word}",
      "name" : "网络图片",
      "output_template" : "Container(\n        child: Image.network(\n          \"${foo}\",\n          alignment: Alignment.topCenter,\n          repeat: ImageRepeat.repeatY,\n          color: Colors.red,\n          colorBlendMode: BlendMode.colorDodge,\n        ),\n        width: 300,\n        height: 300,\n        color: Colors.yellow,\n      ),",
      "description" : "",
      "identifier" : ""
    },
    {
      "identifier" : "",
      "pattern" : "yuanxing ${foo:word}",
      "supported_languages" : [
        "any"
      ],
      "description" : "",
      "name" : "圆形图片",
      "output_template" : "CircleAvatar(\n        radius: 100,\n        backgroundImage: NetworkImage(\"${foo}\"),\n        child: Container(\n          alignment: Alignment(0, .5),\n          width: 200,\n          height: 200,\n          child: Text(\"兵长利威尔\")\n        ),\n      ),",
      "is_enabled" : true
    },
    {
      "identifier" : "",
      "pattern" : "yuanjiao ${foo:word}",
      "description" : "",
      "name" : "圆角图片",
      "output_template" : " ClipRRect(\n        borderRadius: BorderRadius.circular(10),\n        child: Image.network(\n          \"${foo}\",\n          width: 200,\n          height: 200,\n        ),\n      ),",
      "is_enabled" : true,
      "supported_languages" : [
        "any"
      ]
    },
    {
      "description" : "",
      "name" : "textfield",
      "supported_languages" : [
        "any"
      ],
      "identifier" : "",
      "output_template" : "\/\/\"在State里, 定义类变量\"\n\/\/在1. define var in State\nfinal textEditingController = TextEditingController();\n  \n\/\/ 1.设置默认值 define 默认值value in init()\ntextEditingController.text = \"Hello World\";\n\n\/\/ 2.监听文本框 add listener in init()\ntextEditingController.addListener(() {\n  print(\"textEditingController:${ textEditingController.text }\");\n});\n    \n\/\/ 3. define textfield in Body\n    TextField(\n      decoration: InputDecoration(\n        icon: Icon(Icons.people),\n        labelText: \"${foo}\",\n        hintText: \"请输入用户名\",\n        border: InputBorder.none,\n        filled: true,\n        fillColor: Colors.lightGreen\n      ),\n      onChanged: (value) {\n        print(\"onChanged:$value\");\n      },\n      onSubmitted: (value) {\n        print(\"onSubmitted:$value\");\n      },\n    ),",
      "pattern" : "tf ${foo:word}",
      "is_enabled" : true
    }
  ]
}